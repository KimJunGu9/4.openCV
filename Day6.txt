필터링
영상에서 필요한 정보만 통과시키고 원치 않는 정보를 걸러내는 작업

공간적 필터링
- 영상의 픽셀값을 직접 이용하는 필터링 방법
- 대상 좌표의 픽셀값과 주변 픽셀값을 동시에 사용
- 주로 마스크(mask) 연산을 이용함

다양한 모양의 크기의 마스크
1*3, 3*1, 3*3, 5*5

마스크의 형태와 값에 따라 필터의 역할이 결정됨
- 영상을 부드럽게 만들기
- 영상을 날카롭게 만들기
- 엣지(edge) 검출
- 잡음 제거

openCV 필터링에서 지원하는 가장자리 픽셀 확장 방법
BORDER_CONSTANT : 000abcdefgh000
BORDER_REPLICATE : aaaabcdefghhhh
BORDER_REFLECT : cbaabcdefghhgf

cv2.filter2D(src, ddepth, kernel, dst=None, anchor=None, delta=None, borderType=None)
    src : 입력영상
    ddepth : 출력 영상 데이터 타입, -1을 지정하면 src와 같은 dst영상을 생성
    kernel : 필터 마스크 행렬
    anchor : 고정점 위치. (-1, -1)이면 필터 중앙을 고정점으로 사용
    delta : 추가적으로 더할 값
    borderType : 가장자리 픽셀 확장 방식

평균값 필터
- 영상의 특정 좌표값을 주변 픽셀값들의 산술 평균으로 설정
- 픽셀들 간의 그레이스케일 값 변화가 줄어들어 날카로운 에지가 무뎌지고 영상에 있는 잡음의 영향이 사라지는 효과
                                1 1 1 1 1
        1 1 1                   1 1 1 1 1
1/9 *   1 1 1           1/25 *  1 1 1 1 1
        1 1 1                   1 1 1 1 1
                                1 1 1 1 1
- 마스크 크기가 커질수록 평균값 필터 결과가 더욱 부드러워짐(연산량이 늘어남)






cv2.blur(src, ksize, dst=None, anchor=None, borderType=None)
    - ksize : 평균값 필터 크기



---------------------------------------------------------------------------------------------------------


가우시안 필터
- 평균값 필터에 의한 블러링의 단점
    1. 필터링 대상 위치에서 가까이 있는 픽셀과 멀리 있는 픽셀이 모두 같은 가중치를 사용하여 평균을 계산
    2. 멀리 있는 픽셀의 영향을 많이 받을 수 있음

가우시안 함수
    cv2.GaussianBlur(src, ksize, sigmaX, dst=None, sigmaY=None, borderType=None)
    ksize : 가우시안 커널 크기. (0,0)을 지정하면 sigma 값에 의해 자동으로 결정됨
    sigmaX : x방향 sigma
    sigmaY : y방향 sigma. 0이면 sigmaX와 같게 설정



--------------------------------------------------------------------------------------------------------


샤프닝
언샤프 마스크(Unsharp mask) 필터링
날카롭지 않은 영상 또는 부드러워진 영상을 이용하여 날카로운 영상을 생성

h(x) = f(x) + g(x) = 2f(x) - \f(X)


문제
컬러 영상에 대한 언샤프 마스크 필터 구현하기
-> 6_sharpening2.py 참조




--------------------------------------------------------------------------------------------------------


영상의 잡음(noise)
영상의 픽셀 값에 추가되는 원치않는 형태의 신호

잡음의 종류
1. 가우시안 잡음(Gaussian noise)
2. 소금&후추 잡음(Salt&Pepper noise)


미디언 필터(Median filter)
- 주변 픽셀들의 값들을 정렬하여 그 중앙값(median)으로 픽셀값을 대체
- 소금-후추 잡음제거에 효과적

    48  69  72
    52  102 88
    69  84  92

    48 60 72 52 102 88 69 84 92

    48 52 60 69 72 84 88 92 102 (오름차순)
                -- 중앙값 선택 -> anchor

    48 60 72
    52 72 88
    69 84 92

cv2.medianBlur(src, ksize, dst=None)
    ksize : 커널 크기. 1보다 큰 홀수를 지정



-----------------------------------------------------------------------------------------------


가우시안 잡음 제거 -> 가우시안 필터를 사용


양방향 필터(Bilateral filter)
- 에지 보전 잡음 제거 필터의 하나
- 평균값 필터 또는 가우시안 필터는 에지 부근에서도 픽셀값을 평탄하게 만드는 단점이 있음
- 기준 픽셀과 이웃 픽셀과의 거리, 그리고 픽셀 값의 차이를 함께 고려하여 블러링 정도를 조절
- 에지가 아닌 부분에서만 블러링

    cv2. bilateralFilter(src, d, sigmaColor, sigmaSpace, dst=None, borderType=None)
    d : 필터링에 사용될 이웃 픽셀의 거리(지름), 음수(-1)를 입력하면 sigmaSpace값에 의해 자동 결정됨
    sigmaColor : 색 공간에서 필터의 표준 편차
    sigmaSpace : 좌표 공간에서 필터의 표준 편차



-------------------------------------------------------------------------------------------------------



필터 카메라
- 카메라 입력 영상에 필터링을 적용
- 카툰 필터, 시케치 필터
- 스페이스바를 누를 때마다 모드 변경

카툰 필터 : cv2.bilateralFilter() + cv2.bitwise_and() + 255 - cv2.Canny()
스케치 필터 :
    평탄한 영역은 흰색
    엣지 근방에서 어두운 영역을 검정색으로 설정(밝은 영역은 흰색)
    cv2.cvtColor() + cv2.GaussianBlur() + cv2.divide() * 255


cv2.Canny()
엣지 검출 함수
    cv2.Canny(img, threshold1, threshold2)
    threshold1, threshold2 : 엣지 여부를 판단하는 임계값(클수록 엣지가 검출하기 어렵고, 작을수록 엣지 검출하기 쉽다.)

interpolation = 이미지를 resize할 때 어떻게 처리할 지
cv2.INTER_NEAREST : 최근방 이웃 보간법(가장 속도가 빠르지만 퀄리티가 많이 떨어짐)
cv2.INTER_LINEAR : 양선형 보간법(효율성이 좋음. 퀄리티가 적당)
cv2.INTER_CUBIC : 3차 회선 보간법(느리지만 퀄리티가 좋음)
cv2.INTER_LANCZOS4 : Lanczos 보간법(아주 느리지만 퀄리티가 최고)
cv2.INTER_AREA : 영상 축소(영역적인 정보를 추출해서 결과 영상을 셋팅. 축소할 때 사용)
